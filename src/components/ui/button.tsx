import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cn } from '@/lib/utils';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean;\n  variant?: 'default' | 'secondary' | 'outline' | 'destructive' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  loading?: boolean;\n}\n\nconst base =\n  'inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-60 ring-offset-background';\n\nconst variants: Record<NonNullable<ButtonProps['variant']>, string> = {\n  default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n  secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90',\n  outline: 'border border-border bg-background hover:bg-muted hover:text-foreground',\n  destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n  ghost: 'hover:bg-muted hover:text-foreground',\n};\n\nconst sizes: Record<NonNullable<ButtonProps['size']>, string> = {\n  sm: 'h-8 px-3 text-xs',\n  md: 'h-10 px-4 text-sm',\n  lg: 'h-12 px-6 text-base',\n};\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      asChild = false,\n      loading = false,\n      children,\n      disabled,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(\n          base,\n          variants[variant],\n          sizes[size],\n          loading && 'relative cursor-wait',\n          className,\n        )}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading && (\n          <span className="mr-2 inline-block h-4 w-4 animate-spin rounded-full border-2 border-current border-r-transparent" />\n        )}\n        {children}\n      </Comp>\n    );\n  },\n);\nButton.displayName = 'Button';\n