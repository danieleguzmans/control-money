import { Button } from '@/components/ui/button';\nimport { useTheme } from './ThemeProvider';\nimport { Sun, Moon, Laptop } from 'lucide-react';\nimport { useState } from 'react';\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const options: { label: string; value: 'light' | 'dark' | 'system'; icon: JSX.Element }[] = [\n    { label: 'Claro', value: 'light', icon: <Sun className="h-4 w-4" /> },\n    { label: 'Oscuro', value: 'dark', icon: <Moon className="h-4 w-4" /> },\n    { label: 'Sistema', value: 'system', icon: <Laptop className="h-4 w-4" /> },\n  ];\n\n  return (\n    <div className="relative">\n      <Button\n        variant="outline"\n        size="sm"\n        onClick={() => setOpen((o) => !o)}\n        aria-haspopup="menu"\n        aria-expanded={open}\n      >\n        {theme === 'dark' ? <Moon className="h-4 w-4" /> : theme === 'light' ? <Sun className="h-4 w-4" /> : <Laptop className="h-4 w-4" />}\n      </Button>\n      {open && (\n        <div\n          role="menu"\n          className="absolute right-0 z-20 mt-2 w-40 overflow-hidden rounded-md border bg-popover p-1 shadow-md"\n        >\n          {options.map((opt) => (\n            <button\n              key={opt.value}\n              onClick={() => {\n                setTheme(opt.value);\n                setOpen(false);\n              }}\n              className={`flex w-full items-center gap-2 rounded px-2 py-1.5 text-left text-sm hover:bg-muted ${\n                theme === opt.value ? 'bg-muted' : ''\n              }`}\n            >\n              {opt.icon}\n              <span>{opt.label}</span>\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n